<!DOCTYPE html>
<html lang="en">
  <head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link href="/css/course_content.css" rel="stylesheet">

    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <script src="https://cdn.jsdelivr.net/npm/hls.js@1"></script>
  <body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-4 border-end">
                <ul id="tree1">
                  <% for( let index = 0; index < data.sections.length; index++ ) { %>
                    <li><a href="#"><%= data.sections[index].title %> </a>
                      <ul>
                      <% for( let index2 = 0; index2 < data.sections[index].subsections.length; index2++ ) { %>
                        <li><a onclick=<%- "goPage(" + index.toString() + "," + index2.toString() + ");" %> ><%= data.sections[index].subsections[index2].title %> </a></li>
                      <% } %>
                      </ul>
                    </li>
                  <% } %>
            </div>
            <div class="col-lg-8">
              <% if (posSec != -1 && posSub != -1) { %>
                  <% var content = data.sections[posSec].subsections[posSub]; %>
                  <%= content.title %> 
                  <br/>
                  <%= content.content %> 
                  <br/>
                  <% if (content.videoLink) { %>
                    <video
                      id="video"
                      controls
                      class="videoCentered"
                      style="width: 80%"
                    ></video>
                  <% } %>
              <% } %>
              <br/>
              <% if (content && content.fileList.length) { %>
                <ul id="tree2">
                  <li> <a href="#">List of file</a>
                  <ul>
                    <% for( let index = 0; index < content.fileList.length; index++ ) { %>
                      <li onclick=<%- "location.href=\'" + content.fileList[index].path + "\';" %>> <%=content.fileList[index].name%> </li>
                    <% } %>
                  </ul>
                  </li>
                </ul>
                <% } %>

            </div>
        </div>
    </div>
  </body>
  <script src="https://code.jquery.com/jquery-3.6.2.min.js" integrity="sha256-2krYZKh//PcchRtd+H+VyyQoZ/e3EcrkxhM8ycwASPA=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
  <script src="/js/course_content.js"></script>
  <script>
    function goPage(index, index2) {
      var queryString = getQueryStrings();
      // Add new params to the querystring dictionary
      queryString["sec"] = index.toString();
      queryString["sub"] = index2.toString();

      window.location.href =
          window.location.protocol + "//" +
          window.location.host +
          window.location.pathname +
          createQueryString(queryString);
    }

  // http://stackoverflow.com/questions/2907482
  // Gets Querystring from window.location and converts all keys to lowercase
  function getQueryStrings() {
      var assoc = {};
      var decode = function (s) { return decodeURIComponent(s.replace(/\+/g, " ")); };
      var queryString = location.search.substring(1);
      var keyValues = queryString.split('&');

      for (var i in keyValues) {
          var key = keyValues[i].split('=');
          if (key.length > 1) {
              assoc[decode(key[0]).toLowerCase()] = decode(key[1]);
          }
      }

      return assoc;
  }

  function createQueryString(queryDict) {
      var queryStringBits = [];
      for (var key in queryDict) {
          if (queryDict.hasOwnProperty(key)) {
              queryStringBits.push(key + "=" + queryDict[key]);
          }
      }
      return queryStringBits.length > 0
          ? "?" + queryStringBits.join("&")
          : "";
  }
  </script>
  <% if (content && content.videoLink) { %>
  <script>
      var video = document.getElementById('video');
      var videoSrc = "<%- content.videoLink %>" + "/index.m3u8";
      if (Hls.isSupported()) {
          var hls = new Hls();
  
          hls.on(Hls.Events.MEDIA_ATTACHED, function () {
              console.log('video and hls.js are now bound together !');
          });
          hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {
              console.log(
              'manifest loaded, found ' + data.levels.length + ' quality level'
              );
          });
  
          hls.loadSource(videoSrc);
          hls.attachMedia(video);
      }
      else if (video.canPlayType('application/vnd.apple.mpegurl')) {
          video.src = videoSrc;
      }
  </script>   
  <% } %>
</html>
